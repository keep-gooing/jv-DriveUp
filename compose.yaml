version: "3.8"

services:
  postgresdb:
    platform: linux/arm64
    image: postgres
    restart: unless-stopped
    env_file: ./.env
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DATABASE
    ports:
      - $POSTGRES_LOCAL_PORT:$POSTGRES_DOCKER_PORT
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 30s
      retries: 3
  app:
    depends_on:
      - postgresdb
    restart: on-failure
    image: posts-service
    build: .
    env_file: ./.env
    ports:
      - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
      - $DEBUG_PORT:$DEBUG_PORT
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:postgresql://postgresdb:$POSTGRES_DOCKER_PORT/$POSTGRES_DATABASE",
        "spring.datasource.username" : "$POSTGRES_USER",
        "spring.datasource.password" : "$POSTGRES_PASSWORD",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.PostgreSQLDialect"
        "spring.jpa.hibernate.ddl-auto" : "validate",
        "spring.jpa.show-sql": true,
        "spring.jpa.open-in-view": false,
        "spring.sql.init.mode": "always",
        "spring.liquibase.change-log": "classpath:/db/changelog/changes/master.yml",
        "spring.liquibase.enabled": true,
        "liquibase.validate-on-update": false,
        "jwt.secret": "$JWT_SECRET",
        "jwt.expiration": "$JWT_EXPIRATION",
        "telegram.bot.token": "$TELEGRAM_BOT_TOKEN",
        "stripe.public.key": "$STRIPE_PUBLIC_KEY",
        "stripe.secret.key": "$STRIPE_SECRET_KEY",
        "payment.success.url": "$PAYMENT_SUCCESS_URL",
        "payment.cancel.url": "$PAYMENT_CANCEL_URL"
      }'
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
